echo "----------------------------------------------------------------------"
echo "remote shell commands"
echo

echo "----------------------------------------------------------------------"
echo "closessh"
echo "	close all reverse ssh session"
echo "----------------------------------------------------------------------"
echo "cmdresult serial_num_cmd"
echo "	return the traces of the command #serial_num_cmd"
echo "----------------------------------------------------------------------"
echo "dnconfig [-A addr] [-P port] [-U user] [-W pass] [-C config_name] [-F 0|1] [-H s<s>_a<a>_b<b>] [-S] [-R]"
echo "	download a tar configuration and if -S restart the LRR process"
echo "----------------------------------------------------------------------"
echo "upconfig [-A addr] [-P port] [-U user] [-W pass] [-D] [-X]"
echo "	download a tar configuration and if -S restart the LRR process"
echo "----------------------------------------------------------------------"
echo "moreini [-A addr] [-P port] [-U user] [-W pass] [-T] tarfile"
echo "	download a tar of configuration ini files and merge them with existing one"
echo "----------------------------------------------------------------------"
echo "env"
echo "	return environment process"
echo "----------------------------------------------------------------------"
echo "gpsman [-LAT x.y -LON a.b -ALT a]"
echo "	set or return GPS location" 
echo "----------------------------------------------------------------------"
echo "log lrr|iface|system"
echo "	return logs for lrr or iface or system (tail -n50)" 
echo "----------------------------------------------------------------------"
echo "logicchan"
echo "	return the current logical channels configuration"
echo "----------------------------------------------------------------------"
echo "netinfo"
echo "	return main network informations (ifconfig+route+/etc/resolv.conf)" 
echo "----------------------------------------------------------------------"
echo "openssh [-P port]"
echo "	open a reverse ssh session"
echo "----------------------------------------------------------------------"
echo "ping [addr]"
echo "	ping -c10 ICMP on addr or on lrc1.thingpark.com"
echo "----------------------------------------------------------------------"
echo "ps"
echo "	processes list"
echo "----------------------------------------------------------------------"
echo "reboot"
echo "	reboot the LRR gateway"
echo "----------------------------------------------------------------------"
echo "restart"
echo "	restart the LRR process"
echo "----------------------------------------------------------------------"
echo "rmcustomcfg [inifile ... inifile]"
echo "	remove a list or all custom configuration files in ~/usr/etc/lrr"
echo "----------------------------------------------------------------------"
echo "showconfig"
echo "	dump configuration files (lrr.x --config)"
echo "----------------------------------------------------------------------"
echo "radioparams"
echo "	return the current radio configuration"
echo "----------------------------------------------------------------------"
echo "setiniparam lrr|lgw|channels|gpsman|custom section[:idx] param [value]"
echo "	set a parameter in an ini file (setiniparam custom antenna:0 gain 3)"
echo "----------------------------------------------------------------------"
echo "setkeys -card<idx> <key> [-card<idx> <key>] ... "
echo "  with idx = [0..3]"
echo "  Set board-dependant AES-128 keys for decrypting finetimestamps"
echo "----------------------------------------------------------------------"
echo "ants -chain<idx> <gain>-<cableloss> [-chain<idx> <gain>-<cableloss>] ..."
echo "  with idx = [0..8]"
echo "  Set antennas configuration"
echo "----------------------------------------------------------------------"
echo "tail file"
echo "	tail -n50 a file : absolute name or relative to . or ~ or ~/var/log/lrr"
echo "----------------------------------------------------------------------"
echo "upgrade [-A addr] [-P port] [-U user] [-W pass] [-V a.b.c] [-F 0|1|2] [-X]"
echo "	download a tar installation and restart the LRR process"
echo "----------------------------------------------------------------------"
echo "rfscanv0"
echo "	Radio frequencies scan using rssi_histogram"
echo "----------------------------------------------------------------------"
if [ "$LRRSYSTEM" = "ciscoms" ]
then
	echo "rfscanv1 [-A addr] [-P port] [-U user] [-W pass] [-T token] [-F] [-X] [-D spidevice] [-f freq_start:freq_step:freq_stop]"
else
	echo "rfscanv1 [-A addr] [-P port] [-U user] [-W pass] [-T token] [-F] [-X]"
fi
echo "	Radio frequencies scan using spectral_scan"
echo "----------------------------------------------------------------------"
echo "rfscanstop"
echo "	Radio frequencies scan stop"
echo


echo "----------------------------------------------------------------------"
echo "remote shell commands (builtin)"
echo
echo "----------------------------------------------------------------------"
echo "version"
echo "	return LRR version"
echo "----------------------------------------------------------------------"
echo "versions"
echo "	return LRR and libs version"
echo "----------------------------------------------------------------------"
echo "stop"
echo "	exit the LRR process"
echo "----------------------------------------------------------------------"
echo "uptimesyst"
echo "	return the uptime the system"
echo "----------------------------------------------------------------------"
echo "uptimeproc"
echo "	return the uptime the LRR process"
echo "----------------------------------------------------------------------"
echo "radiostop"
echo "	stop the radio thread of the LRR process"
echo "----------------------------------------------------------------------"
echo "radiostart"
echo "	start the radio thread of the LRR process"
echo "----------------------------------------------------------------------"
echo "dnradiostop"
echo "	stop the radio downlink flow"
echo "----------------------------------------------------------------------"
echo "dnradiostart"
echo "	start the radio downlink flow"
echo "----------------------------------------------------------------------"
echo "radiostatus"
echo "	return the radio status"
echo "----------------------------------------------------------------------"
echo "cmdstatus serial_num_cmd"
echo "	return the status of the command #serial_num_cmd"
echo "----------------------------------------------------------------------"
echo "configrefresh"
echo "	force the LRR to send its configuration to TWA"
echo "----------------------------------------------------------------------"
echo "getkeys"
echo "	return the boards finetimestamping decrypt keys"
echo "----------------------------------------------------------------------"
echo "getants"
echo "	return the antennas configuration"
echo "----------------------------------------------------------------------"
echo


if [ "$LRRSYSTEM" = "wirmav2" ]
then
echo "----------------------------------------------------------------------"
echo "           KERLINK / wirmav2 only"

echo "----------------------------------------------------------------------"
echo "radiooff"
echo "	power off the radio board"
echo "----------------------------------------------------------------------"
echo "radioon"
echo "	power on the radio board"
echo "----------------------------------------------------------------------"
echo "radiopower"
echo "	power off/on the radio board"
echo "----------------------------------------------------------------------"
echo "saverff -L lrrid"
echo "	prepare a Reset From Factory archive and reboot"
echo "----------------------------------------------------------------------"
echo "execrff -L lrrid"
echo "	restore the Reset From Factory archive and reboot"
echo "----------------------------------------------------------------------"
echo "rffstatus"
echo "	get status of the Reset From Factory archive"
echo "----------------------------------------------------------------------"
echo "lockrff"
echo "	lock the execrff command"
echo "----------------------------------------------------------------------"
echo "unlockrff"
echo "	unlock the execrff command"
echo "----------------------------------------------------------------------"
echo "eth0stop"
echo "	stop ethernet"
echo "----------------------------------------------------------------------"
echo "eth0start"
echo "	start ethernet"
echo "----------------------------------------------------------------------"
echo "get_version"
echo "	return software kerlink versions"
echo "----------------------------------------------------------------------"
echo "fw_printenv"
echo "	return bootload environment"
echo "----------------------------------------------------------------------"
echo "gps"
echo "	return GPS information (use kmstool position)"
fi
# end WIRMAV2
